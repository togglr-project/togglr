name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_reverse_proxy:
        description: 'Build reverse-proxy image'
        required: false
        default: true
        type: boolean
      build_frontend:
        description: 'Build frontend image'
        required: false
        default: true
        type: boolean
      build_backend:
        description: 'Build backend image'
        required: false
        default: true
        type: boolean
env:
  REGISTRY: ${{ vars.DOCKER_REGISTRY || 'docker.io' }}
  FRONTEND_IMAGE: rom8726/togglr-frontend
  REVERSE_PROXY_IMAGE: rom8726/togglr-reverse-proxy
  BACKEND_IMAGE: rom8726/togglr-backend

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
        cache: true

    - name: Run linter
      run: make lint

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
        cache: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install dependencies
      run: go mod download

    - name: Run unit and integration tests
      run: make test-integration
      env:        
        # Testcontainers settings
        TESTCONTAINERS_RYUK_DISABLED: true

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: |
          coverage.out
          coverage.html

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: true

      - name: Build
        run: make build

  build-backend:
    name: Build backend
    runs-on: ubuntu-22.04
    needs: test
    if: ${{ github.event.inputs.build_backend != 'false' && (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get version info
        id: version-backend
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(git rev-parse --short HEAD)
          fi
          BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_time=$BUILD_TIME" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"
          echo "Build time: $BUILD_TIME"

      - name: Build and push backend image
        run: |
          TOOL_VERSION=${{ steps.version-backend.outputs.version }} \
          TOOL_BUILD_TIME=${{ steps.version-backend.outputs.build_time }} \
          DOCKER_REGISTRY=${{ env.REGISTRY }} \
          make docker-push-backend

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-22.04
    needs: build-backend
    if: ${{ github.event.inputs.build_frontend != 'false' && (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get version info
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(git rev-parse --short HEAD)
          fi
          BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_time=$BUILD_TIME" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"
          echo "Build time: $BUILD_TIME"

      - name: Build and push frontend image
        run: |
          cd webui && \
          VITE_VERSION=${{ steps.version.outputs.version }} \
          VITE_BUILD_TIME=${{ steps.version.outputs.build_time }} \
          DOCKER_REGISTRY=${{ env.REGISTRY }} \
          make docker-push

  build-reverse-proxy:
    name: Build Reverse Proxy
    runs-on: ubuntu-22.04
    needs: build-frontend
    if: ${{ github.event.inputs.build_reverse_proxy != 'false' && (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get version info
        id: version-reverse-proxy
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(git rev-parse --short HEAD)
          fi
          BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_time=$BUILD_TIME" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"
          echo "Build time: $BUILD_TIME"

      - name: Build and push reverse-proxy image
        run: |
          TOOL_VERSION=${{ steps.version-reverse-proxy.outputs.version }} \
          TOOL_BUILD_TIME=${{ steps.version-reverse-proxy.outputs.build_time }} \
          DOCKER_REGISTRY=${{ env.REGISTRY }} \
          make docker-push-reverse-proxy

  cleanup:
    name: Cleanup
    needs: [build-backend, build-frontend, build-reverse-proxy]
    runs-on: ubuntu-22.04
    if: always() && (github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')))
    steps:
      - name: Cleanup Docker
        run: |
          docker system prune -f
