// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
)

type ApiKeyAuth struct {
	APIKey string
	Roles  []string
}

// GetAPIKey returns the value of APIKey.
func (s *ApiKeyAuth) GetAPIKey() string {
	return s.APIKey
}

// GetRoles returns the value of Roles.
func (s *ApiKeyAuth) GetRoles() []string {
	return s.Roles
}

// SetAPIKey sets the value of APIKey.
func (s *ApiKeyAuth) SetAPIKey(val string) {
	s.APIKey = val
}

// SetRoles sets the value of Roles.
func (s *ApiKeyAuth) SetRoles(val []string) {
	s.Roles = val
}

// Ref: #/components/schemas/Error
type Error struct {
	Error ErrorError `json:"error"`
}

// GetError returns the value of Error.
func (s *Error) GetError() ErrorError {
	return s.Error
}

// SetError sets the value of Error.
func (s *Error) SetError(val ErrorError) {
	s.Error = val
}

// Merged schema.
// Ref: #/components/schemas/ErrorBadRequest
type ErrorBadRequest struct {
	Error ErrorBadRequestError `json:"error"`
}

// GetError returns the value of Error.
func (s *ErrorBadRequest) GetError() ErrorBadRequestError {
	return s.Error
}

// SetError sets the value of Error.
func (s *ErrorBadRequest) SetError(val ErrorBadRequestError) {
	s.Error = val
}

func (*ErrorBadRequest) sdkV1FeaturesFeatureKeyEvaluatePostRes() {}

type ErrorBadRequestError struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *ErrorBadRequestError) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *ErrorBadRequestError) SetMessage(val OptString) {
	s.Message = val
}

type ErrorError struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *ErrorError) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *ErrorError) SetMessage(val OptString) {
	s.Message = val
}

// Merged schema.
// Ref: #/components/schemas/ErrorInternalServerError
type ErrorInternalServerError struct {
	Error ErrorInternalServerErrorError `json:"error"`
}

// GetError returns the value of Error.
func (s *ErrorInternalServerError) GetError() ErrorInternalServerErrorError {
	return s.Error
}

// SetError sets the value of Error.
func (s *ErrorInternalServerError) SetError(val ErrorInternalServerErrorError) {
	s.Error = val
}

func (*ErrorInternalServerError) sdkV1FeaturesFeatureKeyEvaluatePostRes() {}

type ErrorInternalServerErrorError struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *ErrorInternalServerErrorError) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *ErrorInternalServerErrorError) SetMessage(val OptString) {
	s.Message = val
}

// Merged schema.
// Ref: #/components/schemas/ErrorNotFound
type ErrorNotFound struct {
	Error ErrorNotFoundError `json:"error"`
}

// GetError returns the value of Error.
func (s *ErrorNotFound) GetError() ErrorNotFoundError {
	return s.Error
}

// SetError sets the value of Error.
func (s *ErrorNotFound) SetError(val ErrorNotFoundError) {
	s.Error = val
}

func (*ErrorNotFound) sdkV1FeaturesFeatureKeyEvaluatePostRes() {}

type ErrorNotFoundError struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *ErrorNotFoundError) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *ErrorNotFoundError) SetMessage(val OptString) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

func (*ErrorStatusCode) sdkV1FeaturesFeatureKeyEvaluatePostRes() {}

// Merged schema.
// Ref: #/components/schemas/ErrorUnauthorized
type ErrorUnauthorized struct {
	Error ErrorUnauthorizedError `json:"error"`
}

// GetError returns the value of Error.
func (s *ErrorUnauthorized) GetError() ErrorUnauthorizedError {
	return s.Error
}

// SetError sets the value of Error.
func (s *ErrorUnauthorized) SetError(val ErrorUnauthorizedError) {
	s.Error = val
}

func (*ErrorUnauthorized) sdkV1FeaturesFeatureKeyEvaluatePostRes() {}

type ErrorUnauthorizedError struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *ErrorUnauthorizedError) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *ErrorUnauthorizedError) SetMessage(val OptString) {
	s.Message = val
}

// Ref: #/components/schemas/EvaluateRequest
type EvaluateRequest map[string]jx.Raw

func (s *EvaluateRequest) init() EvaluateRequest {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/EvaluateResponse
type EvaluateResponse struct {
	FeatureKey string `json:"feature_key"`
	Enabled    bool   `json:"enabled"`
	Value      string `json:"value"`
}

// GetFeatureKey returns the value of FeatureKey.
func (s *EvaluateResponse) GetFeatureKey() string {
	return s.FeatureKey
}

// GetEnabled returns the value of Enabled.
func (s *EvaluateResponse) GetEnabled() bool {
	return s.Enabled
}

// GetValue returns the value of Value.
func (s *EvaluateResponse) GetValue() string {
	return s.Value
}

// SetFeatureKey sets the value of FeatureKey.
func (s *EvaluateResponse) SetFeatureKey(val string) {
	s.FeatureKey = val
}

// SetEnabled sets the value of Enabled.
func (s *EvaluateResponse) SetEnabled(val bool) {
	s.Enabled = val
}

// SetValue sets the value of Value.
func (s *EvaluateResponse) SetValue(val string) {
	s.Value = val
}

func (*EvaluateResponse) sdkV1FeaturesFeatureKeyEvaluatePostRes() {}

// Ref: #/components/schemas/HealthResponse
type HealthResponse struct {
	Status     HealthResponseStatus `json:"status"`
	ServerTime time.Time            `json:"server_time"`
}

// GetStatus returns the value of Status.
func (s *HealthResponse) GetStatus() HealthResponseStatus {
	return s.Status
}

// GetServerTime returns the value of ServerTime.
func (s *HealthResponse) GetServerTime() time.Time {
	return s.ServerTime
}

// SetStatus sets the value of Status.
func (s *HealthResponse) SetStatus(val HealthResponseStatus) {
	s.Status = val
}

// SetServerTime sets the value of ServerTime.
func (s *HealthResponse) SetServerTime(val time.Time) {
	s.ServerTime = val
}

func (*HealthResponse) sdkV1HealthGetRes() {}

type HealthResponseStatus string

const (
	HealthResponseStatusOk HealthResponseStatus = "ok"
)

// AllValues returns all HealthResponseStatus values.
func (HealthResponseStatus) AllValues() []HealthResponseStatus {
	return []HealthResponseStatus{
		HealthResponseStatusOk,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HealthResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case HealthResponseStatusOk:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HealthResponseStatus) UnmarshalText(data []byte) error {
	switch HealthResponseStatus(data) {
	case HealthResponseStatusOk:
		*s = HealthResponseStatusOk
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// SdkV1HealthGetDef is default response for SdkV1HealthGet operation.
type SdkV1HealthGetDef struct {
	StatusCode int
}

// GetStatusCode returns the value of StatusCode.
func (s *SdkV1HealthGetDef) GetStatusCode() int {
	return s.StatusCode
}

// SetStatusCode sets the value of StatusCode.
func (s *SdkV1HealthGetDef) SetStatusCode(val int) {
	s.StatusCode = val
}

func (*SdkV1HealthGetDef) sdkV1HealthGetRes() {}
