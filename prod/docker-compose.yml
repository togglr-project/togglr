version: '3.8'

services:
  togglr-reverse-proxy:
    container_name: togglr-reverse-proxy
    image: ${DOCKER_REGISTRY}/rom8726/togglr-reverse-proxy:${PLATFORM_VERSION}
    ports:
      - "443:443"
    environment:
      - DOMAIN=${DOMAIN}
      - BACKEND_URL=http://togglr-backend:8080
      - WS_BACKEND_URL=http://togglr-backend:8082
      - SDK_BACKEND_URL=http://togglr-backend:8090
      - FRONTEND_URL=http://togglr-frontend
      - SSL_CERT=${SSL_CERT}
      - SSL_CERT_KEY=${SSL_CERT_KEY}
    volumes:
      - "/opt/togglr/nginx/ssl:/etc/nginx/ssl"
    depends_on:
      togglr-frontend:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "netstat", "-tln", "|", "grep", "443 && netstat", "-tln", "|", "grep", "8090"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  togglr-frontend:
    container_name: togglr-frontend
    image: ${DOCKER_REGISTRY}/rom8726/togglr-frontend:${PLATFORM_VERSION}
    environment:
      - TOGGLR_API_BASE_URL=https://${DOMAIN}
      - TOGGLR_WS_BASE_URL=https://${DOMAIN}
    restart: always
    depends_on:
      togglr-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "--silent", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  togglr-backend:
    container_name: togglr-backend
    image: ${DOCKER_REGISTRY}/rom8726/togglr-backend:${PLATFORM_VERSION}
    ports:
       - "8081:8081"
    env_file:
      - config.env
    command: ["/bin/app", "server"]
    depends_on:
      togglr-postgresql:
        condition: service_healthy
      togglr-nats:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "--silent", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  togglr-postgresql:
    image: timescale/timescaledb:latest-pg17
    container_name: togglr-postgresql
    restart: always
    environment:
      POSTGRES_USER: togglr
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: togglr
      PGDATA: /var/lib/postgresql/data/main
    volumes:
      - "/opt/togglr/postgresql:/var/lib/postgresql/data/main"
#    ports:
#      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "PG_PASSWORD=${DB_PASSWORD} pg_isready -U togglr -d togglr"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  togglr-nats:
    image: nats:2.11.10-alpine
    container_name: togglr-nats
    restart: unless-stopped
    ports:
      - "8222:8222"   # HTTP monitoring endpoint
      - "6222:6222"   # route port (optional, for clustering)
    environment:
      - NATS_LOG_LEVEL=info
    volumes:
      - "/opt/togglr/nats/data:/data"
      - "/opt/togglr/nats/nats.conf:/etc/nats/nats.conf:ro"
    command: ["-c", "/etc/nats/nats.conf"]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8222/varz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
