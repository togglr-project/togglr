- name: success update segment
  fixtures:
    - empty_db
    - segment

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: update_segment
      request:
        method: PUT
        path: /api/v1/segments/22222222-2222-2222-2222-222222222222
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body:
          name: "Premium VIP Users"
          description: "Updated description for VIP users"
          conditions:
            condition:
              attribute: "user.tier"
              operator: "eq"
              value: "premium_vip"
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          {
            "segment": {
              "id": "22222222-2222-2222-2222-222222222222",
              "project_id": "11111111-1111-1111-1111-111111111111",
              "name": "Premium VIP Users",
              "description": "Updated description for VIP users",
              "conditions": {
                "condition": {
                  "attribute": "user.tier",
                  "operator": "eq",
                  "value": "premium_vip"
                }
              },
              "created_at": "<<PRESENCE>>",
              "updated_at": "<<PRESENCE>>"
            }
          }
      dbChecks:
        - query: SELECT name, description FROM segments WHERE id = '22222222-2222-2222-2222-222222222222'
          result:
            - name: "Premium VIP Users"
              description: "Updated description for VIP users"

- name: success update segment with complex conditions
  fixtures:
    - empty_db
    - segment

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: update_segment_complex
      request:
        method: PUT
        path: /api/v1/segments/22222222-2222-2222-2222-222222222222
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body:
          name: "Complex Segment"
          description: "Segment with complex conditions"
          conditions:
            group:
              operator: "and"
              children:
                - condition:
                    attribute: "user.tier"
                    operator: "eq"
                    value: "vip"
                - condition:
                    attribute: "user.activity"
                    operator: "gte"
                    value: 100
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          {
            "segment": {
              "id": "22222222-2222-2222-2222-222222222222",
              "project_id": "11111111-1111-1111-1111-111111111111",
              "name": "Complex Segment",
              "description": "Segment with complex conditions",
              "conditions": {
                "group": {
                  "operator": "and",
                  "children": [
                    {
                      "condition": {
                        "attribute": "user.tier",
                        "operator": "eq",
                        "value": "vip"
                      }
                    },
                    {
                      "condition": {
                        "attribute": "user.activity",
                        "operator": "gte",
                        "value": 100
                      }
                    }
                  ]
                }
              },
              "created_at": "<<PRESENCE>>",
              "updated_at": "<<PRESENCE>>"
            }
          }
      dbChecks:
        - query: SELECT name, description FROM segments WHERE id = '22222222-2222-2222-2222-222222222222'
          result:
            - name: "Complex Segment"
              description: "Segment with complex conditions"

- name: update segment without auth
  fixtures:
    - empty_db
    - segment

  steps:
    - name: update_segment_unauthorized
      request:
        method: PUT
        path: /api/v1/segments/22222222-2222-2222-2222-222222222222
        headers:
          Content-Type: application/json
        body:
          name: "Updated Segment"
          conditions:
            condition:
              attribute: "user.tier"
              operator: "eq"
              value: "vip"
      response:
        status: 401
        json: |
          {
            "error": {
              "message": "unauthorized"
            }
          }

- name: update segment without permissions
  fixtures:
    - empty_db
    - multiple_segments

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"dev4", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: update_segment_no_permission
      request:
        method: PUT
        path: /api/v1/segments/33333333-3333-3333-3333-333333333333
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body:
          name: "Updated Segment"
          conditions:
            condition:
              attribute: "user.tier"
              operator: "eq"
              value: "vip"
      response:
        status: 403
        json: |
          {
            "error": {
              "message": "permission denied"
            }
          }

- name: update non-existent segment
  fixtures:
    - empty_db
    - segment

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: update_segment_not_found
      request:
        method: PUT
        path: /api/v1/segments/99999999-9999-9999-9999-999999999999
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body:
          name: "Updated Segment"
          conditions:
            condition:
              attribute: "user.tier"
              operator: "eq"
              value: "vip"
      response:
        status: 404
        json: |
          {
            "error": {
              "message": "segment not found"
            }
          }

- name: update segment with validation errors - empty name
  fixtures:
    - empty_db
    - segment

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: update_segment_empty_name
      request:
        method: PUT
        path: /api/v1/segments/22222222-2222-2222-2222-222222222222
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body:
          name: ""
          conditions:
            condition:
              attribute: "user.tier"
              operator: "eq"
              value: "vip"
      response:
        status: 400

- name: update segment with validation errors - missing required fields
  fixtures:
    - empty_db
    - segment

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: update_segment_missing_fields
      request:
        method: PUT
        path: /api/v1/segments/22222222-2222-2222-2222-222222222222
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body:
          name: "Updated Segment"
      response:
        status: 400

- name: update segment with invalid JSON
  fixtures:
    - empty_db
    - segment

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: update_segment_invalid_json
      request:
        method: PUT
        path: /api/v1/segments/22222222-2222-2222-2222-222222222222
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: '{"name": "Updated Segment", "conditions": {"condition": {"attribute": "user.tier", "operator": "eq", "value": "vip",}}}'
      response:
        status: 400
