- name: success list rule attributes
  fixtures:
    - empty_db
    - admin_user
    - rule_attributes
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_rule_attributes
      request:
        method: GET
        path: /api/v1/rule_attributes
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          [
            {
              "name": "user.id",
              "description": "User ID attribute"
            },
            {
              "name": "user.role",
              "description": "User role attribute"
            },
            {
              "name": "user.tier",
              "description": "User tier attribute"
            }
          ]

- name: list rule attributes without auth
  fixtures:
    - empty_db
    - admin_user
    - rule_attributes
  steps:
    - name: list_rule_attributes_without_auth
      request:
        method: GET
        path: /api/v1/rule_attributes
        headers:
          Content-Type: application/json
      response:
        status: 401
        json: |
          {
            "error": {
              "message": "unauthorized"
            }
          }

- name: list rule attributes with non-superuser
  fixtures:
    - empty_db
    - admin_user
    - rule_attributes
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"dev1", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_rule_attributes_non_superuser
      request:
        method: GET
        path: /api/v1/rule_attributes
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          [
            {
              "name": "user.id",
              "description": "User ID attribute"
            },
            {
              "name": "user.role",
              "description": "User role attribute"
            },
            {
              "name": "user.tier",
              "description": "User tier attribute"
            }
          ]

- name: list empty rule attributes
  fixtures:
    - empty_db
    - admin_user
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_empty_rule_attributes
      request:
        method: GET
        path: /api/v1/rule_attributes
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          "<<PRESENCE>>"
