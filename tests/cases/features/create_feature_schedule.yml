- name: success create feature schedule
  fixtures:
    - empty_db
    - feature
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: create_feature_schedule
      request:
        method: POST
        path: /api/v1/features/22222222-2222-2222-2222-222222222222/schedules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: { "starts_at": "2025-12-01T10:00:00Z", "ends_at": "2025-12-31T18:00:00Z", "timezone": "UTC", "action": "enable" }
      response:
        status: 201
        headers:
          Content-Type: application/json
        json: |
          {
            "schedule": {
              "id": "<<PRESENCE>>",
              "project_id": "11111111-1111-1111-1111-111111111111",
              "feature_id": "22222222-2222-2222-2222-222222222222",
              "starts_at": "<<PRESENCE>>",
              "ends_at": "<<PRESENCE>>",
              "cron_expr": null,
              "cron_duration": null,
              "timezone": "UTC",
              "action": "enable",
              "created_at": "<<PRESENCE>>"
            }
          }
      dbChecks:
        - query: SELECT action::text, timezone FROM feature_schedules WHERE feature_id = '22222222-2222-2222-2222-222222222222'
          result:
            - action: "enable"
              timezone: "UTC"

- name: success create feature schedule with cron
  fixtures:
    - empty_db
    - feature
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: create_feature_schedule_with_cron
      request:
        method: POST
        path: /api/v1/features/22222222-2222-2222-2222-222222222222/schedules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: { "cron_expr": "0 9 * * *", "cron_duration": "2h", "timezone": "Europe/Moscow", "action": "disable" }
      response:
        status: 201
        headers:
          Content-Type: application/json
        json: |
          {
            "schedule": {
              "id": "<<PRESENCE>>",
              "project_id": "11111111-1111-1111-1111-111111111111",
              "feature_id": "22222222-2222-2222-2222-222222222222",
              "starts_at": null,
              "ends_at": null,
              "cron_expr": "0 9 * * *",
              "cron_duration": "2h0m0s",
              "timezone": "Europe/Moscow",
              "action": "disable",
              "created_at": "<<PRESENCE>>"
            }
          }
      dbChecks:
        - query: SELECT action::text, timezone, cron_expr, cron_duration FROM feature_schedules WHERE feature_id = '22222222-2222-2222-2222-222222222222'
          result:
            - action: "disable"
              timezone: "Europe/Moscow"
              cron_expr: "0 9 * * *"
              cron_duration: "2h0m0s"

- name: create feature schedule without auth
  fixtures:
    - empty_db
    - feature
  steps:
    - name: create_feature_schedule_no_auth
      request:
        method: POST
        path: /api/v1/features/22222222-2222-2222-2222-222222222222/schedules
        headers:
          Content-Type: application/json
        body: { "timezone": "UTC", "action": "enable" }
      response:
        status: 401
        json: |
          {
            "error": {
              "message": "unauthorized"
            }
          }

- name: create feature schedule without permissions
  fixtures:
    - empty_db
    - multiple_features
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"dev2", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: create_feature_schedule_no_permissions
      request:
        method: POST
        path: /api/v1/features/33333333-3333-3333-3333-333333333333/schedules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: { "timezone": "UTC", "action": "enable" }
      response:
        status: 403
        json: |
          {
            "error": {
              "message": "permission denied"
            }
          }

- name: create feature schedule for non-existent feature
  fixtures:
    - empty_db
    - project
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: create_feature_schedule_non_existent
      request:
        method: POST
        path: /api/v1/features/99999999-9999-9999-9999-999999999999/schedules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: { "timezone": "UTC", "action": "enable" }
      response:
        status: 404
        json: |
          {
            "error": {
              "message": "feature not found"
            }
          }

- name: create feature schedule with validation errors - missing required fields
  fixtures:
    - empty_db
    - feature
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: create_feature_schedule_missing_fields
      request:
        method: POST
        path: /api/v1/features/22222222-2222-2222-2222-222222222222/schedules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: { "starts_at": "2025-12-01T10:00:00Z" }
      response:
        status: 400
        json: |
          {
              "error_message": "<<PRESENCE>>"
          }

- name: create feature schedule with invalid JSON
  fixtures:
    - empty_db
    - feature
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: create_feature_schedule_invalid_json
      request:
        method: POST
        path: /api/v1/features/22222222-2222-2222-2222-222222222222/schedules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: { "timezone": "UTC", "action": "invalid action here" }
      response:
        status: 400
        json: |
          {
              "error_message": "<<PRESENCE>>"
          }
