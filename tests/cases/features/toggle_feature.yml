- name: success toggle feature enable
  fixtures:
    - empty_db
    - feature
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: toggle_feature_enable
      request:
        method: PUT
        path: /api/v1/features/22222222-2222-2222-2222-222222222222/toggle?environment_key=prod
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: { "enabled": true }
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          {
            "feature": {
              "id": "22222222-2222-2222-2222-222222222222",
              "project_id": "11111111-1111-1111-1111-111111111111",
              "key": "new_ui",
              "name": "New UI",
              "description": "New user interface feature",
              "kind": "simple",
              "default_value": "on",
              "enabled": true,
              "created_at": "<<PRESENCE>>",
              "updated_at": "<<PRESENCE>>"
            }
          }
      dbChecks:
        - query: SELECT enabled FROM v_features_full WHERE id = '22222222-2222-2222-2222-222222222222' AND environment_key = 'prod'
          result:
            - enabled: true

- name: success toggle feature disable
  fixtures:
    - empty_db
    - feature
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: toggle_feature_disable
      request:
        method: PUT
        path: /api/v1/features/22222222-2222-2222-2222-222222222222/toggle?environment_key=prod
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: { "enabled": false }
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          {
            "feature": {
              "id": "22222222-2222-2222-2222-222222222222",
              "project_id": "11111111-1111-1111-1111-111111111111",
              "key": "new_ui",
              "name": "New UI",
              "description": "New user interface feature",
              "kind": "simple",
              "default_value": "on",
              "enabled": false,
              "created_at": "<<PRESENCE>>",
              "updated_at": "<<PRESENCE>>"
            }
          }
      dbChecks:
        - query: SELECT enabled FROM v_features_full WHERE id = '22222222-2222-2222-2222-222222222222' AND environment_key = 'prod'
          result:
            - enabled: false

- name: toggle feature without auth
  fixtures:
    - empty_db
    - feature
  steps:
    - name: toggle_feature_no_auth
      request:
        method: PUT
        path: /api/v1/features/22222222-2222-2222-2222-222222222222/toggle?environment_key=prod
        headers:
          Content-Type: application/json
        body: { "enabled": true }
      response:
        status: 401
        json: |
          {
            "error": {
              "message": "unauthorized"
            }
          }

- name: toggle feature without permissions
  fixtures:
    - empty_db
    - multiple_features
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"dev2", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: toggle_feature_no_permissions
      request:
        method: PUT
        path: /api/v1/features/33333333-3333-3333-3333-333333333333/toggle?environment_key=prod
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: { "enabled": true }
      response:
        status: 403
        json: |
          {
            "error": {
              "message": "permission denied"
            }
          }

- name: toggle non-existent feature
  fixtures:
    - empty_db
    - project
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: toggle_non_existent_feature
      request:
        method: PUT
        path: /api/v1/features/99999999-9999-9999-9999-999999999999/toggle?environment_key=prod
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: { "enabled": true }
      response:
        status: 404
        json: |
          {
            "error": {
              "message": "feature not found"
            }
          }

- name: toggle feature with validation errors - missing required fields
  fixtures:
    - empty_db
    - feature
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: toggle_feature_missing_fields
      request:
        method: PUT
        path: /api/v1/features/22222222-2222-2222-2222-222222222222/toggle?environment_key=prod
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {}
      response:
        status: 400
        json: |
          {
              "error_message": "<<PRESENCE>>"
          }

- name: toggle feature with invalid JSON
  fixtures:
    - empty_db
    - feature
  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: toggle_feature_invalid_json
      request:
        method: PUT
        path: /api/v1/features/22222222-2222-2222-2222-222222222222/toggle?environment_key=prod
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: { "enabled": "not a boolean" }
      response:
        status: 400
        json: |
          {
              "error_message": "<<PRESENCE>>"
          }

