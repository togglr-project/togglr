- name: success list features
  fixtures:
    - empty_db
    - multiple_features

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_features
      request:
        method: GET
        path: /api/v1/projects/11111111-1111-1111-1111-111111111111/features
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          {
            "items": "<<PRESENCE>>",
            "pagination": {
              "total": 2,
              "page": 1,
              "per_page": 20
            }
          }

- name: success list features with empty result
  fixtures:
    - empty_db
    - project

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_features_empty
      request:
        method: GET
        path: /api/v1/projects/11111111-1111-1111-1111-111111111111/features
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          {
            "items": [],
            "pagination": {
              "total": 0,
              "page": 1,
              "per_page": 20
            }
          }

- name: success list features with kind filter
  fixtures:
    - empty_db
    - multiple_features

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_features_simple_only
      request:
        method: GET
        path: /api/v1/projects/11111111-1111-1111-1111-111111111111/features?kind=simple
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          {
            "items": [
              {
                "id": "<<PRESENCE>>",
                "project_id": "11111111-1111-1111-1111-111111111111",
                "key": "feature1",
                "name": "Feature 1",
                "description": "First feature",
                "kind": "simple",
                "default_variant": "on",
                "enabled": true,
                "rollout_key": "user.id",
                "created_at": "<<PRESENCE>>",
                "updated_at": "<<PRESENCE>>",
                "is_active": true
              }
            ],
            "pagination": {
              "total": 1,
              "page": 1,
              "per_page": 20
            }
          }

- name: success list features with enabled filter
  fixtures:
    - empty_db
    - multiple_features

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_features_enabled_only
      request:
        method: GET
        path: /api/v1/projects/11111111-1111-1111-1111-111111111111/features?enabled=true
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          {
            "items": [
              {
                "id": "<<PRESENCE>>",
                "project_id": "11111111-1111-1111-1111-111111111111",
                "key": "feature1",
                "name": "Feature 1",
                "description": "First feature",
                "kind": "simple",
                "default_variant": "on",
                "enabled": true,
                "rollout_key": "user.id",
                "created_at": "<<PRESENCE>>",
                "updated_at": "<<PRESENCE>>",
                "is_active": true
              }
            ],
            "pagination": {
              "total": 1,
              "page": 1,
              "per_page": 20
            }
          }

- name: success list features with text search
  fixtures:
    - empty_db
    - multiple_features

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_features_text_search
      request:
        method: GET
        path: /api/v1/projects/11111111-1111-1111-1111-111111111111/features?text_selector=Feature%201
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          {
            "items": [
              {
                "id": "<<PRESENCE>>",
                "project_id": "11111111-1111-1111-1111-111111111111",
                "key": "feature1",
                "name": "Feature 1",
                "description": "First feature",
                "kind": "simple",
                "default_variant": "on",
                "enabled": true,
                "rollout_key": "user.id",
                "created_at": "<<PRESENCE>>",
                "updated_at": "<<PRESENCE>>",
                "is_active": true
              }
            ],
            "pagination": {
              "total": 1,
              "page": 1,
              "per_page": 20
            }
          }

- name: success list features with sorting
  fixtures:
    - empty_db
    - multiple_features

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_features_sorted_by_name_desc
      request:
        method: GET
        path: /api/v1/projects/11111111-1111-1111-1111-111111111111/features?sort_by=name&sort_order=desc
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          {
            "items": [
              {
                "id": "<<PRESENCE>>",
                "project_id": "11111111-1111-1111-1111-111111111111",
                "key": "feature2",
                "name": "Feature 2",
                "description": "Second feature",
                "kind": "multivariant",
                "default_variant": "control",
                "enabled": false,
                "rollout_key": "user.id",
                "created_at": "<<PRESENCE>>",
                "updated_at": "<<PRESENCE>>",
                "is_active": false
              },
              {
                "id": "<<PRESENCE>>",
                "project_id": "11111111-1111-1111-1111-111111111111",
                "key": "feature1",
                "name": "Feature 1",
                "description": "First feature",
                "kind": "simple",
                "default_variant": "on",
                "enabled": true,
                "rollout_key": "user.id",
                "created_at": "<<PRESENCE>>",
                "updated_at": "<<PRESENCE>>",
                "is_active": true
              }
            ],
            "pagination": {
              "total": 2,
              "page": 1,
              "per_page": 20
            }
          }

- name: success list features with pagination
  fixtures:
    - empty_db
    - multiple_features

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_features_pagination
      request:
        method: GET
        path: /api/v1/projects/11111111-1111-1111-1111-111111111111/features?page=1&per_page=1
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        headers:
          Content-Type: application/json
        json: |
          {
            "items": "<<PRESENCE>>",
            "pagination": {
              "total": 2,
              "page": 1,
              "per_page": 1
            }
          }

- name: list features without auth
  fixtures:
    - empty_db
    - multiple_features

  steps:
    - name: list_features_unauthorized
      request:
        method: GET
        path: /api/v1/projects/11111111-1111-1111-1111-111111111111/features
        headers:
          Content-Type: application/json
      response:
        status: 401
        json: |
          {
            "error": {
              "message": "unauthorized"
            }
          }

- name: list features without permissions
  fixtures:
    - empty_db
    - multiple_features

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"dev4", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_features_no_permission
      request:
        method: GET
        path: /api/v1/projects/11111111-1111-1111-1111-111111111111/features
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 403
        json: |
          {
            "error": {
              "message": "permission denied"
            }
          }

- name: list features for non-existent project
  fixtures:
    - empty_db
    - multiple_features

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_features_not_found
      request:
        method: GET
        path: /api/v1/projects/99999999-9999-9999-9999-999999999999/features
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        json: |
          {
            "items": [],
            "pagination": {
              "total": 0,
              "page": 1,
              "per_page": 20
            }
          }

- name: list features with invalid pagination parameters
  fixtures:
    - empty_db
    - multiple_features

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_features_invalid_page
      request:
        method: GET
        path: /api/v1/projects/11111111-1111-1111-1111-111111111111/features?page=0
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 400

- name: list features with invalid per_page parameter
  fixtures:
    - empty_db
    - multiple_features

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"Warden123!"}
      response:
        status: 200
        headers:
          Content-Type: application/json

    - name: list_features_invalid_per_page
      request:
        method: GET
        path: /api/v1/projects/11111111-1111-1111-1111-111111111111/features?per_page=0
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 400
