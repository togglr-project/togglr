openapi: 3.1.0
info:
  title: SDK API
  version: 1.0.0

paths:
  /sdk/v1/features:
    get:
      security:
        - apiKeyAuth: [ ]
      summary: List of features for project
      operationId: ListProjectFeatures
      responses:
        '200':
          description: List of features for the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeaturesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPermissionDenied'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternalServerError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
      required: [error]

    ErrorInternalServerError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          example:
            error:
              code: "internal"
              message: "Internal server error"

    ErrorBadRequest:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          example:
            error:
              code: "bad_request"
              message: "Bad request"

    ErrorUnauthorized:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          example:
            error:
              code: "unauthorized"
              message: "Authentication required"

    ErrorPermissionDenied:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          example:
            error:
              code: "permission_denied"
              message: "Permission denied"

    ErrorTooManyRequests:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          example:
            error:
              code: "too_many_requests"
              message: "Too many requests"

    ErrorNotFound:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          example:
            error:
              code: "not_found"
              message: "Resource not found"

    ListFeaturesResponse:
      type: array
      items:
        $ref: '#/components/schemas/FeatureDetailsResponse'

    FeatureDetailsResponse:
      type: object
      properties:
        feature:
          $ref: '#/components/schemas/Feature'
        variants:
          type: array
          items:
            $ref: '#/components/schemas/FlagVariant'
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
      required: [feature, variants, rules]

    FlagVariant:
      type: object
      properties:
        id:
          type: string
          example: "7D5C3985-78AB-4F74-83EA-1A963908EA04"
        feature_id:
          type: string
          example: "7D5C3985-78AB-4F74-83EA-1A963908EA04"
        name:
          type: string
          example: "A"
        rollout_percent:
          type: integer
          format: uint
          minimum: 1
          maximum: 100
          example: 50
      required: [id, feature_id, name, rollout_percent]

    RuleAttribute:
      type: string
      description: Attribute to match in the rule condition

    RuleOperator:
      type: string
      description: Operator for condition comparison
      enum: [eq, neq, in, not_in, gt, gte, lt, lte, regex, percentage]

    RuleCondition:
      type: object
      description: Single condition item
      properties:
        attribute:
          $ref: '#/components/schemas/RuleAttribute'
        operator:
          $ref: '#/components/schemas/RuleOperator'
        value: {}
      required: [attribute, operator, value]

    Rule:
      type: object
      properties:
        id:
          type: string
          example: "7D5C3985-78AB-4F74-83EA-1A963908EA04"
        feature_id:
          type: string
          example: "7D5C3985-78AB-4F74-83EA-1A963908EA04"
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/RuleCondition'
        flag_variant_id:
          type: string
          example: "7D5C3985-78AB-4F74-83EA-1A963908EA04"
        priority:
          type: integer
          format: uint
          minimum: 0
          maximum: 255
          example: 10
      required: [id, feature_id, conditions, flag_variant_id, priority]

    FeatureKind:
      type: string
      enum:
        - boolean
        - multivariant

    Feature:
      type: object
      properties:
        id:
          type: string
          example: "7D5C3985-78AB-4F74-83EA-1A963908EA04"
        key:
          type: string
          example: "new_ui"
        name:
          type: string
          example: "New UI"
        kind:
          $ref: '#/components/schemas/FeatureKind'
        default_variant:
          type: string
          example: "on"
        enabled:
          type: boolean
          example: true
      required: [id, project_id, key, name, kind, default_variant, enabled]
